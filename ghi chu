- Component l√† m·ªôt kh·ªëi x√¢y d·ª±ng giao di·ªán ƒë·ªôc l·∫≠p v√† c√≥ th·ªÉ t√°i s·ª≠ d·ª•ng ƒë∆∞·ª£c. 

- Template l√† m·ªôt kh·ªëi x√¢y d·ª±ng giao di·ªán ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ hi·ªÉn th·ªã c√°c component.

- Dynamic value l√† gi√° tr·ªã c√≥ th·ªÉ thay ƒë·ªïi trong qu√° tr√¨nh ch·∫°y c·ªßa ·ª©ng d·ª•ng. 
V√≠ d·ª•, n·∫øu b·∫°n mu·ªën hi·ªÉn th·ªã 1 gi√° tr·ªã ƒë·ªông t·ª´ m·ªôt API ho·∫∑c t·ª´ m·ªôt ngu·ªìn d·ªØ li·ªáu kh√°c, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng dynamic value ƒë·ªÉ hi·ªÉn th·ªã gi√° tr·ªã ƒë√≥ l√™n giao di·ªán ng∆∞·ªùi d√πng c·ªßa b·∫°n.

- Multiple component l√† nhi·ªÅu component ƒë∆∞·ª£c s·ª≠ d·ª•ng trong 1 ·ª©ng d·ª•ng ReactJS. M·ªói component ƒë√≥ng vai tr√≤ nh∆∞ m·ªôt ph·∫ßn nh·ªè c·ªßa ·ª©ng d·ª•ng v√† c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng l·∫°i nhi·ªÅu l·∫ßn trong ·ª©ng d·ª•ng.
C√°c component n√†y c√≥ th·ªÉ ƒë∆∞·ª£c l·ªìng v√†o nhau ƒë·ªÉ t·∫°o th√†nh c√°c ·ª©ng d·ª•ng ph·ª©c t·∫°p t·ª´ c√°c kh·ªëi x√¢y d·ª±ng ƒë∆°n gi·∫£n

- Click Events: ƒë·ªÉ li√™n k·∫øt ph∆∞∆°ng th·ª©c trong th√†nh ph·∫ßn Component. ƒêi·ªÅu n√†y ƒë∆∞·ª£c th·ª±c hi·ªán ƒë·ªÉ function c√≥ th·ªÉ ƒë∆∞·ª£c giao ti·∫øp v√† call b·∫±ng onClick()

- useState: cho ph√©p ch√∫ng ta s·ª≠ d·ª•ng state trong functional component. State th∆∞·ªùng ƒë∆∞·ª£c hi·ªÉu l√† d·ªØ li·ªáu ho·∫∑c thu·ªôc t√≠nh c·∫ßn ƒë∆∞·ª£c theo d√µi trong m·ªôt ·ª©ng d·ª•ng üëè. 
Ch√∫ng ta s·ª≠ d·ª•ng useState ƒë·ªÉ kh·ªüi t·∫°o state v·ªõi gi√° tr·ªã ban ƒë·∫ßu v√† c√≥ th·ªÉ c·∫≠p nh·∫≠t gi√° tr·ªã c·ªßa state ƒë√≥

- Props ƒë√≥ng m·ªôt vai tr√≤ quan tr·ªçng cho ph√©p ch√∫ng ta truy·ªÅn th√¥ng tin t·ª´ m·ªôt th√†nh ph·∫ßn sang th√†nh ph·∫ßn kh√°c (T·ª´ th√†nh ph·∫ßn cha ƒë·∫øn c√°c th√†nh ph·∫ßn con). Props l√† c√°c ƒë·ªëi t∆∞·ª£ng c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng b√™n trong th√†nh ph·∫ßn nh∆∞ng kh√¥ng th·ªÉ b·ªã thay ƒë·ªïi tr·ª±c ti·∫øp b√™n trong th√†nh ph·∫ßn ƒë√≥.

- Reusing Component l√† vi·ªác t·∫°o ra c√°c component c√≥ th·ªÉ t√°i s·ª≠ d·ª•ng trong nhi·ªÅu component kh√°c nhau c·ªßa ·ª©ng d·ª•ng ƒë·ªÉ x√¢y d·ª±ng nhi·ªÅu phi√™n b·∫£n giao di·ªán ng∆∞·ªùi d√πng kh√°c nhau. C√°c components t√°i s·ª≠ d·ª•ng n√†y l√† components thu·∫ßn t√∫y v√† d·ª± ƒëo√°n ƒë∆∞·ª£c, kh√¥ng c√≥ logic kinh doanh ph·ª©c t·∫°p v√† c√≥ t√≠nh ch·∫•t chung. D·ª±a tr√™n d·ªØ li·ªáu ƒë∆∞·ª£c truy·ªÅn cho c√°c components n√†y, ch√∫ng s·∫Ω hi·ªÉn th·ªã c√°c giao di·ªán ng∆∞·ªùi d√πng nh·∫•t qu√°n

- Function Props l√† 1 c√°ch ƒë·ªÉ truy·ªÅn d·ªØ li·ªáu t·ª´ cha ƒë·∫øn con th√¥ng qua c√°c function v√† t·ª´ th·∫±ng con c√≥ th·ªÉ truy·ªÅn data ng∆∞·ª£c l·∫°i len cha. Props cho ph√©p b·∫°n truy·ªÅn d·ªØ li·ªáu t√πy ch·ªânh, gi√° tr·ªã v√† c√°c th√¥ng tin kh√°c m√† c√°c ƒë·ªëi s·ªë gi·ªØ.

- useEffect Hook: cho ph√©p b·∫°n th·ª±c hi·ªán c√°c side effect trong functional component. Side effect kh√¥ng n√™n ƒë∆∞·ª£c g√¢y ra tr·ª±c ti·∫øp trong body ho·∫∑c render function c·ªßa component, m√† lu√¥n ƒë∆∞·ª£c bao b·ªçc trong m·ªôt callback ƒë∆∞·ª£c truy·ªÅn v√†o useEffect. B·∫°n c√≥ th·ªÉ t√πy ch·ªçn tr·∫£ v·ªÅ m·ªôt callback kh√°c trong callback ƒë√≥, n√≥ s·∫Ω ƒë∆∞·ª£c s·ª≠ d·ª•ng cho m·ª•c ƒë√≠ch cleanup.
  + T√≠nh ch·∫•t 1: N√≥ s·∫Ω ch·∫°y khi component ƒë∆∞·ª£c render
  + T√≠nh ch·∫•t 2: N√≥ s·∫Ω ch·∫°y khi c√°c tham s·ªë truy·ªÅn v√†o m·∫£ng c√≥ s·ª± thay ƒë·ªïi
  + T√≠nh ch·∫•t 3: N√≥ s·∫Ω ch·∫°y khi component b·ªã remove kh·ªèi DOM

- useEffect Dependency l√† m·∫£ng ch·ª©a c√°c gi√° tr·ªã ph·ª• thu·ªôc ƒë∆∞·ª£c cung c·∫•p nh∆∞ l√† ƒë·ªëi s·ªë th·ª© hai t√πy ch·ªçn c·ªßa cu·ªôc g·ªçi useEffect. C√°c gi√° tr·ªã m·∫£ng ph·∫£i t·ª´ ph·∫°m vi c·ªßa th√†nh ph·∫ßn (t·ª©c l√† props, state, context ho·∫∑c c√°c gi√° tr·ªã ƒë∆∞·ª£c d·∫´n xu·∫•t t·ª´ c√°c th√†nh ph·∫ßn n√†y). N·∫øu m·ªôt trong c√°c th√†nh ph·∫ßn trong m·∫£ng c√≥ s·ª± thay ƒë·ªïi th√¨ s·∫Ω l·∫≠p t·ª©c g·ªçi l·∫°i useEffect ƒë√≥ v√† s·∫Ω re-render l·∫°i component.
B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng m·ªôt m·∫£ng r·ªóng ƒë·ªÉ ch·ªâ ch·∫°y hi·ªáu ·ª©ng m·ªôt l·∫ßn, ho·∫∑c kh√¥ng c√≥ m·∫£ng n√†o ƒë·ªÉ ch·∫°y hi·ªáu ·ª©ng sau m·ªói l·∫ßn render üíØ
B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c gi√° tr·ªã trong m·∫£ng ph·ª• thu·ªôc ƒë·ªÉ ki·ªÉm tra xem li·ªáu hi·ªáu ·ª©ng c√≥ c·∫ßn ƒë∆∞·ª£c ch·∫°y l·∫°i hay kh√¥ng üíØ

- useRef Hook cho ph√©p b·∫°n l∆∞u gi·ªØ c√°c gi√° tr·ªã gi·ªØa c√°c l·∫ßn render v√† truy c·∫≠p tr·ª±c ti·∫øp v√†o c√°c n√∫t DOM. N√≥ tr·∫£ v·ªÅ m·ªôt ƒë·ªëi t∆∞·ª£ng c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng trong su·ªët v√≤ng ƒë·ªùi c·ªßa th√†nh ph·∫ßn. C√°c tr∆∞·ªùng h·ª£p s·ª≠ d·ª•ng ch√≠nh c·ªßa useRef l√† ƒë·ªÉ truy c·∫≠p tr·ª±c ti·∫øp v√†o m·ªôt n√∫t DOM

- JSON Server l√† 1 Node Module m√† b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë·ªÉ t·∫°o demo rest json webservice trong th·ªùi gian ng·∫Øn h∆°n m·ªôt ph√∫t. T·∫•t c·∫£ nh·ªØng g√¨ b·∫°n c·∫ßn l√† m·ªôt t·ªáp JSON cho d·ªØ li·ªáu m·∫´u.
B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng n√≥ ƒë·ªÉ t·∫°o m·ªôt REST API gi·∫£ m·ªôt c√°ch d·ªÖ d√†ng. D·ªØ li·ªáu ƒë∆∞·ª£c chuy·ªÉn ƒë·ªïi sang ƒë·ªãnh d·∫°ng JSON gi·ªØa m√°y kh√°ch v√† m√°y ch·ªß

- Fetching Data l√† m·ªôt qu√° tr√¨nh l·∫•y d·ªØ li·ªáu t·ª´ m·ªôt ngu·ªìn n√†o ƒë√≥ nh∆∞ API ho·∫∑c database v√† hi·ªÉn th·ªã n√≥ tr√™n giao di·ªán ng∆∞·ªùi d√πng. C√≥ nhi·ªÅu c√°ch ƒë·ªÉ fetch data trong ReactJS nh∆∞ s·ª≠ d·ª•ng fetch ho·∫∑c s·ª≠ d·ª•ng th∆∞ vi·ªán axios üëè
M·ªôt c√°ch ph·ªï bi·∫øn ƒë·ªÉ fetch data trong ReactJS l√† s·ª≠ d·ª•ng useEffect hook. useEffect hook gi√∫p ch√∫ng ta th·ª±c hi·ªán c√°c side effect trong components nh∆∞ fetching data, updating DOM tr·ª±c ti·∫øp v√† nhi·ªÅu h∆°n n·ªØa 

- Conditional Loading: VD: a === b ? 'Nine Dev' : 'Hello World'üëè
- Handle Fetching Error trong ReactJS l√† m·ªôt l·ªói x·∫£y ra khi fetch API 

- Custom Hook l√† m·ªôt c√°ch ƒë·ªÉ t√°i s·ª≠ d·ª•ng logic gi·ªØa c√°c components kh√°c nhau. Custom Hooks l√† nh·ªØng hooks m√† do l·∫≠p tr√¨nh vi√™n t·ª± ƒë·ªãnh nghƒ©a v·ªõi m·ª•c ƒë√≠ch th·ª±c hi·ªán m·ªôt ch·ª©c nƒÉng n√†o ƒë√≥. B·∫°n c√≥ th·ªÉ t·∫°o m·ªôt custom hook ƒë·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ API ho·∫∑c ƒë·ªÉ x·ª≠ l√Ω c√°c side effect c·ªßa component

- Active Navbar l√† m·ªôt navbar m√† s·∫Ω hi·ªÉn th·ªã link n√†o ƒëang ƒë∆∞·ª£c ch·ªçn b·∫±ng c√°ch thay ƒë·ªïi m√†u s·∫Øc ho·∫∑c ki·ªÉu d√°ng c·ªßa link ƒë√≥. ƒê·ªÉ t·∫°o m·ªôt active navbar trong reactjs, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng NavLink component t·ª´ react-router-dom, NavLink l√† m·ªôt lo·∫°i Link ƒë·∫∑c bi·ªát m√† s·∫Ω t·ª± ƒë·ªông th√™m thu·ªôc t√≠nh active v√†o link khi n√≥ kh·ªõp v·ªõi ƒë∆∞·ªùng d·∫´n hi·ªán t·∫°i
- Route params l√† nh·ªØng tham s·ªë m√† b·∫°n c√≥ th·ªÉ truy·ªÅn v√†o ƒë∆∞·ªùng d·∫´n c·ªßa m·ªôt route ƒë·ªÉ ƒë·ªãnh danh m·ªôt ph·∫ßn c·ªßa n·ªôi dung m√† b·∫°n mu·ªën hi·ªÉn th·ªã üíØ
Th√¨ b·∫°n c√≥ th·ªÉ truy·ªÅn v√†o m·ªôt gi√° tr·ªã cho tham s·ªë :id ƒë·ªÉ hi·ªÉn th·ªã trang c·ªßa ng∆∞·ªùi d√πng t∆∞∆°ng ·ª©ng. V√≠ d·ª•, n·∫øu b·∫°n truy c·∫≠p v√†o ƒë∆∞·ªùng d·∫´n /user/123, th√¨ b·∫°n s·∫Ω hi·ªÉn th·ªã trang c·ªßa ng∆∞·ªùi d√πng c√≥ id l√† 123

- T√≠nh ch·∫•t c·ªßa useMemo (useMemo ƒë·ªÉ search)
Tr·∫£ l·∫°i 1 value
Tr√°nh cho vi·ªác t√≠nh to√°n l·∫°i m·ªôt function l·∫∑p ƒëi l·∫∑p l·∫°i nhi·ªÅu l·∫ßn m·ªói l·∫ßn component re-render
Caching l·∫°i gi√° tr·ªã return c·ªßa function, m·ªói l·∫ßn component rerender n√≥ s·∫Ω ki·ªÉm tra gi√° tr·ªã tham s·ªë truy·ªÅn m·∫£ng dependency ƒë√≥ c√≥ thay ƒë·ªïi kh√¥ng.
N·∫øu gi√° tr·ªã trong m·∫£ng dependency ƒë√≥ kh√¥ng thay ƒë·ªïi th√¨ return value ƒë√£ caching trong memory.
Ng∆∞·ª£c l·∫°i n·∫øu gi√° tr·ªã tham s·ªë truy·ªÅn v√†o thay ƒë·ªïi, n√≥ s·∫Ω th·ª±c hi·ªán t√≠nh to√°n l·∫°i v√†o tr·∫£ v·ªÅ value, sao ƒë√≥ caching l·∫°i value cho nh·ªØng l·∫ßn rerender ti·∫øp theo.

- useCallback (t∆∞∆°ng t·ª± v·ªõi useMemo)
Tr·∫£ l·∫°i 1 function
Tr√°nh cho vi·ªác t√≠nh to√°n l·∫°i m·ªôt function l·∫∑p ƒëi l·∫∑p l·∫°i nhi·ªÅu l·∫ßn m·ªói l·∫ßn component re-render
Caching l·∫°i function, m·ªói l·∫ßn component rerender n√≥ s·∫Ω ki·ªÉm tra gi√° tr·ªã tham s·ªë truy·ªÅn m·∫£ng dependency ƒë√≥ c√≥ thay ƒë·ªïi kh√¥ng.
N·∫øu gi√° tr·ªã trong m·∫£ng dependency ƒë√≥ kh√¥ng thay ƒë·ªïi th√¨ return function ƒë√£ caching trong memory.
Ng∆∞·ª£c l·∫°i n·∫øu gi√° tr·ªã tham s·ªë truy·ªÅn v√†o thay ƒë·ªïi, n√≥ s·∫Ω th·ª±c hi·ªán t√≠nh to√°n l·∫°i v√†o tr·∫£ v·ªÅ function, sao ƒë√≥ caching l·∫°i function cho nh·ªØng l·∫ßn rerender ti·∫øp theo.


================================REDUX========================
useSelector: ƒë·ªÉ l√°y data(rootReducer) t·ª´ redux v√†o
useDispatch: ƒë·ªÉ c·∫≠p nh·∫≠t l·∫°i state(b·∫Øn action qua reducer trong store)
==> nh∆∞ng ch∆∞a t√≠ch h·ª£p v√†o d·ª± √°n

===================T·ªï Ch·ª©c Folder Trong D·ª± √Ån Th·ª±c T·∫ø====================
components: button, input, select,...
layout: List, Block, Header, Navbar, Footer
Page: Home, About, Detail, Create












============================================================
//?. ki·ªÉm tra xem 1 c√≥ t·ªìn t·∫°i hay kh√¥ng, m√† kh√¥ng g√¢y ra l·ªói n·∫øu ph·∫ßn t·ª≠ ƒë√≥ trong chu·ªói kh√¥ng t·ªìn t·∫°i.